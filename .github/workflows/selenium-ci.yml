name: Selenium CI + Allure Deploy

on:
  push:
    branches: [main]
  pull_request:

permissions:
  contents: write  # necesario para pushear a gh-pages

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout GitHub Pages with previous Allure reports
        uses: actions/checkout@v4
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages-dir

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build Docker image for tests
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: selenium-tests:latest
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Run Selenium tests and store Allure results
        run: |
          mkdir -p reports/allure-results
          docker run --rm \
            -v ${{ github.workspace }}/reports/allure-results:/app/allure-results \
            selenium-tests

      - name: Generate Allure test report with history
        uses: andgineer/allure-report@v3.6
        id: allure-report
        if: always()
        with:
          allure-results: reports/allure-results
          website: gh-pages-dir
          reports-site-path: builds/tests

      - name: Publish Allure report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ always() && (steps.allure-report.outcome == 'success') }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ${{ steps.allure-report.outputs.reports-site }}
          destination_dir: ${{ steps.allure-report.outputs.reports-site-path }}
